{"ast":null,"code":"import _classCallCheck from \"/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nimport { split } from \"./Utils\";\nexport var DestroyUpdater = /*#__PURE__*/function () {\n  function DestroyUpdater(engine, container) {\n    _classCallCheck(this, DestroyUpdater);\n    this.engine = engine;\n    this.container = container;\n  }\n  _createClass(DestroyUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var container = this.container,\n        particlesOptions = particle.options,\n        destroyOptions = particlesOptions.destroy;\n      if (!destroyOptions) {\n        return;\n      }\n      particle.splitCount = 0;\n      var destroyBoundsOptions = destroyOptions.bounds;\n      if (!particle.destroyBounds) {\n        particle.destroyBounds = {};\n      }\n      var bottom = destroyBoundsOptions.bottom,\n        left = destroyBoundsOptions.left,\n        right = destroyBoundsOptions.right,\n        top = destroyBoundsOptions.top,\n        destroyBounds = particle.destroyBounds,\n        canvasSize = container.canvas.size;\n      if (bottom) {\n        destroyBounds.bottom = getRangeValue(bottom) * canvasSize.height / 100;\n      }\n      if (left) {\n        destroyBounds.left = getRangeValue(left) * canvasSize.width / 100;\n      }\n      if (right) {\n        destroyBounds.right = getRangeValue(right) * canvasSize.width / 100;\n      }\n      if (top) {\n        destroyBounds.top = getRangeValue(top) * canvasSize.height / 100;\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      if (!options.destroy) {\n        options.destroy = new Destroy();\n      }\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n      }\n    }\n  }, {\n    key: \"particleDestroyed\",\n    value: function particleDestroyed(particle, override) {\n      if (override) {\n        return;\n      }\n      var destroyOptions = particle.options.destroy;\n      if (destroyOptions && destroyOptions.mode === \"split\") {\n        split(this.engine, this.container, particle);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      var position = particle.getPosition(),\n        bounds = particle.destroyBounds;\n      if (!bounds) {\n        return;\n      }\n      if (bounds.bottom !== undefined && position.y >= bounds.bottom || bounds.left !== undefined && position.x <= bounds.left || bounds.right !== undefined && position.x >= bounds.right || bounds.top !== undefined && position.y <= bounds.top) {\n        particle.destroy();\n      }\n    }\n  }]);\n  return DestroyUpdater;\n}();","map":{"version":3,"names":["getRangeValue","Destroy","split","DestroyUpdater","engine","container","_classCallCheck","_createClass","key","value","init","particle","particlesOptions","options","destroyOptions","destroy","splitCount","destroyBoundsOptions","bounds","destroyBounds","bottom","left","right","top","canvasSize","canvas","size","height","width","isEnabled","destroyed","loadOptions","_len","arguments","length","sources","Array","_key","_i","_sources","source","load","particleDestroyed","override","mode","update","position","getPosition","undefined","y","x"],"sources":["/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js"],"sourcesContent":["import { getRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nimport { split } from \"./Utils\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / 100;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / 100;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / 100;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}