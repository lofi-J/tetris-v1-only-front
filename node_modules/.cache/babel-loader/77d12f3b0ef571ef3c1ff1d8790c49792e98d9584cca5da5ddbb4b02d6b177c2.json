{"ast":null,"code":"// export const TETROMINOS =\n// {\n//     0: { shape: [[0]], color: 'transparent', border: 'transparent'},\n//     I: {\n//         shape: [\n//             ['I', 'I', 'I', 'I'],\n//             [0, 0, 0, 0],\n//             [0, 0, 0, 0],\n//             [0, 0, 0, 0]\n//         ],\n//         color: \"rgba(0, 255, 255, 0.8)\",\n//         border: 'rgba(0, 150, 150, 1)',\n//     },\n//     J: {\n//         shape: [\n//             [0,   'J', 0, 0],\n//             [0,   'J', 0, 0],\n//             ['J', 'J', 0, 0]\n//         ],\n//         color: \"rgba(0, 0, 255, 0.8)\",\n//         border: \"rgba(0, 0, 150, 1)\"\n//     },\n//     L: {\n//         shape: [\n//             [0, 'L', 0,  0],\n//             [0, 'L', 0,  0],\n//             [0, 'L', 'L', 0],\n//             [0, 0, 0, 0],\n//         ],\n//         color: \"rgba(255, 127, 0, 0.8)\",\n//         border: \"rgba(150, 75, 0, 1)\"\n//     },\n//     O: {\n//         shape: [\n//             [0, 0, 0, 0],\n//             [0, 'O', 'O', 0],\n//             [0, 'O', 'O', 0],\n//             [0, 0, 0, 0],\n//         ],\n//         color: \"rgba(255, 255, 0, 0.8)\",\n//         border: 'rgba(150, 150, 0, 1)'\n//     },\n//     S: {\n//         shape: [\n//             [0, 0, 0, 0],\n//             [0, 'S', 'S', 0],\n//             ['S', 'S', 0, 0],\n//             [0, 0, 0, 0]\n//         ],\n//         color: \"rgba(0, 255, 0, 0.8)\",\n//         border: \"rgba(0, 150, 0, 1)\"\n//     },\n//     T: {\n//         shape: [\n//             [0, 'T', 0, 0],\n//             ['T','T','T', 0],\n//             [0, 0, 0, 0],\n//             [0, 0, 0, 0],\n//         ],\n//         color: \"rgba(128, 0, 128, 0.8)\",\n//         border: '#660066'\n//     },\n//     Z: {\n//         shape: [\n//             [0, 0, 0, 0],\n//             ['Z', 'Z', 0, 0],\n//             [0,'Z','Z', 0],\n//             [0, 0, 0, 0]\n//         ],\n//         color: \"rgba(255, 0, 0, 0.8)\",\n//         border: \"rgba(150, 0, 0, 1)\",\n//     }\n// }\n\nexport const TETROMINOS = {\n  0: {\n    shape: [[0]],\n    color: 'transparent',\n    border: 'transparent',\n    shadow: 'transparent'\n  },\n  I: {\n    shape: [['I', 'I', 'I', 'I'], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    color: \"transparent\",\n    border: \"rgba(0, 0, 0, 0.8)\"\n  },\n  J: {\n    shape: [[0, 'J', 0, 0], [0, 'J', 0, 0], ['J', 'J', 0, 0]],\n    color: \"transparent\",\n    border: \"rgba(0, 0, 0, 0.8)\"\n  },\n  L: {\n    shape: [[0, 'L', 0, 0], [0, 'L', 0, 0], [0, 'L', 'L', 0], [0, 0, 0, 0]],\n    color: \"transparent\",\n    border: \"rgba(0, 0, 0, 0.8)\"\n  },\n  O: {\n    shape: [[0, 0, 0, 0], [0, 'O', 'O', 0], [0, 'O', 'O', 0], [0, 0, 0, 0]],\n    color: \"transparent\",\n    border: \"rgba(0, 0, 0, 0.8)\"\n  },\n  S: {\n    shape: [[0, 0, 0, 0], [0, 'S', 'S', 0], ['S', 'S', 0, 0], [0, 0, 0, 0]],\n    color: \"transparent\",\n    border: \"rgba(0, 0, 0, 0.8)\"\n  },\n  T: {\n    shape: [[0, 'T', 0, 0], ['T', 'T', 'T', 0], [0, 0, 0, 0], [0, 0, 0, 0]],\n    color: \"transparent\",\n    border: \"rgba(0, 0, 0, 0.8)\"\n  },\n  Z: {\n    shape: [[0, 0, 0, 0], ['Z', 'Z', 0, 0], [0, 'Z', 'Z', 0], [0, 0, 0, 0]],\n    color: \"transparent\",\n    border: \"rgba(0, 0, 0, 0.8)\"\n  }\n};\nclass Queue {\n  constructor() {\n    this.items = JSON.parse(JSON.stringify(Object.keys(TETROMINOS).filter(key => key !== '0')));\n  }\n  shuffle(array) {\n    const length = array.length;\n    for (let i = length - 1; i > 0; i--) {\n      const randomIndex = Math.floor(Math.random() * (i + 1));\n      [array[i], array[randomIndex]] = [array[randomIndex], array[i]];\n    }\n    return array;\n  }\n  isEmpty() {\n    return this.items.length === 0;\n  }\n  init() {\n    const temp = JSON.parse(JSON.stringify(Object.keys(TETROMINOS).filter(key => key !== '0')));\n    this.shuffle(temp);\n    this.items = temp;\n  }\n  dequeue() {\n    if (this.isEmpty()) {\n      this.init();\n      return TETROMINOS[this.items.pop()];\n    } else {\n      return TETROMINOS[this.items.pop()];\n    }\n  }\n}\nexport const queue = new Queue();\nexport const randomTetromino = () => {\n  return queue.dequeue();\n};","map":{"version":3,"names":["TETROMINOS","shape","color","border","shadow","I","J","L","O","S","T","Z","Queue","constructor","items","JSON","parse","stringify","Object","keys","filter","key","shuffle","array","length","i","randomIndex","Math","floor","random","isEmpty","init","temp","dequeue","pop","queue","randomTetromino"],"sources":["/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/src/constants.js"],"sourcesContent":["// export const TETROMINOS =\n// {\n//     0: { shape: [[0]], color: 'transparent', border: 'transparent'},\n//     I: {\n//         shape: [\n//             ['I', 'I', 'I', 'I'],\n//             [0, 0, 0, 0],\n//             [0, 0, 0, 0],\n//             [0, 0, 0, 0]\n//         ],\n//         color: \"rgba(0, 255, 255, 0.8)\",\n//         border: 'rgba(0, 150, 150, 1)',\n//     },\n//     J: {\n//         shape: [\n//             [0,   'J', 0, 0],\n//             [0,   'J', 0, 0],\n//             ['J', 'J', 0, 0]\n//         ],\n//         color: \"rgba(0, 0, 255, 0.8)\",\n//         border: \"rgba(0, 0, 150, 1)\"\n//     },\n//     L: {\n//         shape: [\n//             [0, 'L', 0,  0],\n//             [0, 'L', 0,  0],\n//             [0, 'L', 'L', 0],\n//             [0, 0, 0, 0],\n//         ],\n//         color: \"rgba(255, 127, 0, 0.8)\",\n//         border: \"rgba(150, 75, 0, 1)\"\n//     },\n//     O: {\n//         shape: [\n//             [0, 0, 0, 0],\n//             [0, 'O', 'O', 0],\n//             [0, 'O', 'O', 0],\n//             [0, 0, 0, 0],\n//         ],\n//         color: \"rgba(255, 255, 0, 0.8)\",\n//         border: 'rgba(150, 150, 0, 1)'\n//     },\n//     S: {\n//         shape: [\n//             [0, 0, 0, 0],\n//             [0, 'S', 'S', 0],\n//             ['S', 'S', 0, 0],\n//             [0, 0, 0, 0]\n//         ],\n//         color: \"rgba(0, 255, 0, 0.8)\",\n//         border: \"rgba(0, 150, 0, 1)\"\n//     },\n//     T: {\n//         shape: [\n//             [0, 'T', 0, 0],\n//             ['T','T','T', 0],\n//             [0, 0, 0, 0],\n//             [0, 0, 0, 0],\n//         ],\n//         color: \"rgba(128, 0, 128, 0.8)\",\n//         border: '#660066'\n//     },\n//     Z: {\n//         shape: [\n//             [0, 0, 0, 0],\n//             ['Z', 'Z', 0, 0],\n//             [0,'Z','Z', 0],\n//             [0, 0, 0, 0]\n//         ],\n//         color: \"rgba(255, 0, 0, 0.8)\",\n//         border: \"rgba(150, 0, 0, 1)\",\n//     }\n// }\n\n\nexport const TETROMINOS =\n{\n    0: { shape: [[0]], color: 'transparent', border: 'transparent', shadow: 'transparent'},\n    I: {\n        shape: [\n            ['I', 'I', 'I', 'I'],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0]\n        ],\n        color: \"transparent\",\n        border: \"rgba(0, 0, 0, 0.8)\",\n\n    },\n    J: {\n        shape: [\n            [0,   'J', 0, 0],\n            [0,   'J', 0, 0],\n            ['J', 'J', 0, 0]\n        ],\n        color: \"transparent\",\n        border: \"rgba(0, 0, 0, 0.8)\",\n    },\n    L: {\n        shape: [\n            [0, 'L', 0,  0],\n            [0, 'L', 0,  0],\n            [0, 'L', 'L', 0],\n            [0, 0, 0, 0],\n        ],\n        color: \"transparent\",\n        border: \"rgba(0, 0, 0, 0.8)\",\n    },\n    O: {\n        shape: [\n            [0, 0, 0, 0],\n            [0, 'O', 'O', 0],\n            [0, 'O', 'O', 0],\n            [0, 0, 0, 0],\n        ],\n        color: \"transparent\",\n        border: \"rgba(0, 0, 0, 0.8)\",\n    },\n    S: {\n        shape: [\n            [0, 0, 0, 0],\n            [0, 'S', 'S', 0],\n            ['S', 'S', 0, 0],\n            [0, 0, 0, 0]\n        ],\n        color: \"transparent\",\n        border: \"rgba(0, 0, 0, 0.8)\",\n    },\n    T: {\n        shape: [\n            [0, 'T', 0, 0],\n            ['T','T','T', 0],\n            [0, 0, 0, 0],\n            [0, 0, 0, 0],\n        ],\n        color: \"transparent\",\n        border: \"rgba(0, 0, 0, 0.8)\",\n    },\n    Z: {\n        shape: [\n            [0, 0, 0, 0],\n            ['Z', 'Z', 0, 0],\n            [0,'Z','Z', 0],\n            [0, 0, 0, 0]\n        ],\n        color: \"transparent\",\n        border: \"rgba(0, 0, 0, 0.8)\",\n    }\n}\n\n\n\nclass Queue {\n    constructor() {\n        this.items = JSON.parse(JSON.stringify(Object.keys(TETROMINOS).filter(key => key !== '0')));\n    }\n\n    shuffle(array) {\n        const length = array.length;\n        for (let i = length - 1; i > 0; i--) {\n          const randomIndex = Math.floor(Math.random() * (i + 1));\n          [array[i], array[randomIndex]] = [array[randomIndex], array[i]];\n        }\n        return array;\n      }\n\n\n\n    isEmpty() {\n        return this.items.length === 0;\n    }\n    init() {\n        const temp = JSON.parse(JSON.stringify(Object.keys(TETROMINOS).filter(key => key !== '0')));\n        this.shuffle(temp);\n        this.items = temp;\n    }\n    dequeue() {\n        if(this.isEmpty()) {\n            this.init();\n            return TETROMINOS[this.items.pop()];\n        } else {\n            return TETROMINOS[this.items.pop()];\n        }\n    }\n}\n\nexport const queue = new Queue();\n\nexport const randomTetromino = () => {\n    return queue.dequeue();\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}