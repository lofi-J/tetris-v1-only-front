{"ast":null,"code":"import _regeneratorRuntime from \"/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nvar EmittersPlugin = /*#__PURE__*/function () {\n  function EmittersPlugin(engine) {\n    _classCallCheck(this, EmittersPlugin);\n    this._engine = engine;\n    this.id = \"emitters\";\n  }\n  _createClass(EmittersPlugin, [{\n    key: \"getPlugin\",\n    value: function getPlugin(container) {\n      return new Emitters(this._engine, container);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, source) {\n      var _source$interactivity, _source$interactivity2;\n      if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n        return;\n      }\n      if (source !== null && source !== void 0 && source.emitters) {\n        options.emitters = executeOnSingleOrMultiple(source.emitters, function (emitter) {\n          var tmp = new Emitter();\n          tmp.load(emitter);\n          return tmp;\n        });\n      }\n      var interactivityEmitters = source === null || source === void 0 ? void 0 : (_source$interactivity = source.interactivity) === null || _source$interactivity === void 0 ? void 0 : (_source$interactivity2 = _source$interactivity.modes) === null || _source$interactivity2 === void 0 ? void 0 : _source$interactivity2.emitters;\n      if (interactivityEmitters) {\n        if (interactivityEmitters instanceof Array) {\n          options.interactivity.modes.emitters = {\n            random: {\n              count: 1,\n              enable: true\n            },\n            value: interactivityEmitters.map(function (s) {\n              var tmp = new Emitter();\n              tmp.load(s);\n              return tmp;\n            })\n          };\n        } else {\n          var emitterMode = interactivityEmitters;\n          if (emitterMode.value !== undefined) {\n            if (emitterMode.value instanceof Array) {\n              var _emitterMode$random$c, _emitterMode$random$e;\n              options.interactivity.modes.emitters = {\n                random: {\n                  count: (_emitterMode$random$c = emitterMode.random.count) !== null && _emitterMode$random$c !== void 0 ? _emitterMode$random$c : 1,\n                  enable: (_emitterMode$random$e = emitterMode.random.enable) !== null && _emitterMode$random$e !== void 0 ? _emitterMode$random$e : false\n                },\n                value: emitterMode.value.map(function (s) {\n                  var tmp = new Emitter();\n                  tmp.load(s);\n                  return tmp;\n                })\n              };\n            } else {\n              var _emitterMode$random$c2, _emitterMode$random$e2;\n              var tmp = new Emitter();\n              tmp.load(emitterMode.value);\n              options.interactivity.modes.emitters = {\n                random: {\n                  count: (_emitterMode$random$c2 = emitterMode.random.count) !== null && _emitterMode$random$c2 !== void 0 ? _emitterMode$random$c2 : 1,\n                  enable: (_emitterMode$random$e2 = emitterMode.random.enable) !== null && _emitterMode$random$e2 !== void 0 ? _emitterMode$random$e2 : false\n                },\n                value: tmp\n              };\n            }\n          } else {\n            var emitterOptions = options.interactivity.modes.emitters = {\n              random: {\n                count: 1,\n                enable: false\n              },\n              value: new Emitter()\n            };\n            emitterOptions.value.load(interactivityEmitters);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"needsPlugin\",\n    value: function needsPlugin(options) {\n      var _options$interactivit, _options$interactivit2, _options$interactivit3;\n      if (!options) {\n        return false;\n      }\n      var emitters = options.emitters;\n      return emitters instanceof Array && !!emitters.length || emitters !== undefined || !!((_options$interactivit = options.interactivity) !== null && _options$interactivit !== void 0 && (_options$interactivit2 = _options$interactivit.events) !== null && _options$interactivit2 !== void 0 && (_options$interactivit3 = _options$interactivit2.onClick) !== null && _options$interactivit3 !== void 0 && _options$interactivit3.mode) && isInArray(\"emitter\", options.interactivity.events.onClick.mode);\n    }\n  }]);\n  return EmittersPlugin;\n}();\nexport function loadEmittersPlugin(_x) {\n  return _loadEmittersPlugin.apply(this, arguments);\n}\nfunction _loadEmittersPlugin() {\n  _loadEmittersPlugin = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(engine) {\n    var plugin;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!engine.emitterShapeManager) {\n            engine.emitterShapeManager = new ShapeManager(engine);\n          }\n          if (!engine.addEmitterShape) {\n            engine.addEmitterShape = function (name, shape) {\n              var _engine$emitterShapeM;\n              (_engine$emitterShapeM = engine.emitterShapeManager) === null || _engine$emitterShapeM === void 0 ? void 0 : _engine$emitterShapeM.addShape(name, shape);\n            };\n          }\n          plugin = new EmittersPlugin(engine);\n          _context.next = 5;\n          return engine.addPlugin(plugin);\n        case 5:\n          engine.addEmitterShape(\"circle\", new CircleShape());\n          engine.addEmitterShape(\"square\", new SquareShape());\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _loadEmittersPlugin.apply(this, arguments);\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";","map":{"version":3,"names":["executeOnSingleOrMultiple","isInArray","CircleShape","Emitter","Emitters","ShapeManager","SquareShape","EmittersPlugin","engine","_classCallCheck","_engine","id","_createClass","key","value","getPlugin","container","loadOptions","options","source","_source$interactivity","_source$interactivity2","needsPlugin","emitters","emitter","tmp","load","interactivityEmitters","interactivity","modes","Array","random","count","enable","map","s","emitterMode","undefined","_emitterMode$random$c","_emitterMode$random$e","_emitterMode$random$c2","_emitterMode$random$e2","emitterOptions","_options$interactivit","_options$interactivit2","_options$interactivit3","length","events","onClick","mode","loadEmittersPlugin","_x","_loadEmittersPlugin","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","plugin","wrap","_callee$","_context","prev","next","emitterShapeManager","addEmitterShape","name","shape","_engine$emitterShapeM","addShape","addPlugin","stop"],"sources":["/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/tsparticles-plugin-emitters/esm/index.js"],"sourcesContent":["import { executeOnSingleOrMultiple, isInArray, } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            engine.emitterShapeManager?.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}