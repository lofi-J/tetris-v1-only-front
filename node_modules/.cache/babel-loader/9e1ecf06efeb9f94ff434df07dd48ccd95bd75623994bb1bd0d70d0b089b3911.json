{"ast":null,"code":"import _classCallCheck from \"/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { initParticle, updateRoll } from \"./Utils\";\nimport { Roll } from \"./Options/Classes/Roll\";\nexport var RollUpdater = /*#__PURE__*/function () {\n  function RollUpdater() {\n    _classCallCheck(this, RollUpdater);\n  }\n  _createClass(RollUpdater, [{\n    key: \"getTransformValues\",\n    value: function getTransformValues(particle) {\n      var _particle$roll;\n      var roll = ((_particle$roll = particle.roll) === null || _particle$roll === void 0 ? void 0 : _particle$roll.enable) && particle.roll,\n        rollHorizontal = roll && roll.horizontal,\n        rollVertical = roll && roll.vertical;\n      return {\n        a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n        d: rollVertical ? Math.sin(roll.angle) : undefined\n      };\n    }\n  }, {\n    key: \"init\",\n    value: function init(particle) {\n      initParticle(particle);\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var roll = particle.options.roll;\n      return !particle.destroyed && !particle.spawning && !!(roll !== null && roll !== void 0 && roll.enable);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      if (!options.roll) {\n        options.roll = new Roll();\n      }\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.roll.load(source === null || source === void 0 ? void 0 : source.roll);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n      updateRoll(particle, delta);\n    }\n  }]);\n  return RollUpdater;\n}();","map":{"version":3,"names":["initParticle","updateRoll","Roll","RollUpdater","_classCallCheck","_createClass","key","value","getTransformValues","particle","_particle$roll","roll","enable","rollHorizontal","horizontal","rollVertical","vertical","a","Math","cos","angle","undefined","d","sin","init","isEnabled","options","destroyed","spawning","loadOptions","_len","arguments","length","sources","Array","_key","_i","_sources","source","load","update","delta"],"sources":["/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/node_modules/tsparticles-updater-roll/esm/RollUpdater.js"],"sourcesContent":["import { initParticle, updateRoll } from \"./Utils\";\nimport { Roll } from \"./Options/Classes/Roll\";\nexport class RollUpdater {\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n"],"mappings":";;AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,SAAS;AAClD,SAASC,IAAI,QAAQ,wBAAwB;AAC7C,WAAaC,WAAW;EAAA,SAAAA,YAAA;IAAAC,eAAA,OAAAD,WAAA;EAAA;EAAAE,YAAA,CAAAF,WAAA;IAAAG,GAAA;IAAAC,KAAA,EACpB,SAAAC,mBAAmBC,QAAQ,EAAE;MAAA,IAAAC,cAAA;MACzB,IAAMC,IAAI,GAAG,EAAAD,cAAA,GAAAD,QAAQ,CAACE,IAAI,cAAAD,cAAA,uBAAbA,cAAA,CAAeE,MAAM,KAAIH,QAAQ,CAACE,IAAI;QAAEE,cAAc,GAAGF,IAAI,IAAIA,IAAI,CAACG,UAAU;QAAEC,YAAY,GAAGJ,IAAI,IAAIA,IAAI,CAACK,QAAQ;MACnI,OAAO;QACHC,CAAC,EAAEJ,cAAc,GAAGK,IAAI,CAACC,GAAG,CAACR,IAAI,CAACS,KAAK,CAAC,GAAGC,SAAS;QACpDC,CAAC,EAAEP,YAAY,GAAGG,IAAI,CAACK,GAAG,CAACZ,IAAI,CAACS,KAAK,CAAC,GAAGC;MAC7C,CAAC;IACL;EAAC;IAAAf,GAAA;IAAAC,KAAA,EACD,SAAAiB,KAAKf,QAAQ,EAAE;MACXT,YAAY,CAACS,QAAQ,CAAC;IAC1B;EAAC;IAAAH,GAAA;IAAAC,KAAA,EACD,SAAAkB,UAAUhB,QAAQ,EAAE;MAChB,IAAME,IAAI,GAAGF,QAAQ,CAACiB,OAAO,CAACf,IAAI;MAClC,OAAO,CAACF,QAAQ,CAACkB,SAAS,IAAI,CAAClB,QAAQ,CAACmB,QAAQ,IAAI,CAAC,EAACjB,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,MAAM;IACtE;EAAC;IAAAN,GAAA;IAAAC,KAAA,EACD,SAAAsB,YAAYH,OAAO,EAAc;MAC7B,IAAI,CAACA,OAAO,CAACf,IAAI,EAAE;QACfe,OAAO,CAACf,IAAI,GAAG,IAAIT,IAAI,CAAC,CAAC;MAC7B;MAAC,SAAA4B,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAHmBC,OAAO,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;QAAPF,OAAO,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;MAAA;MAI3B,SAAAC,EAAA,MAAAC,QAAA,GAAqBJ,OAAO,EAAAG,EAAA,GAAAC,QAAA,CAAAL,MAAA,EAAAI,EAAA,IAAE;QAAzB,IAAME,MAAM,GAAAD,QAAA,CAAAD,EAAA;QACbV,OAAO,CAACf,IAAI,CAAC4B,IAAI,CAACD,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE3B,IAAI,CAAC;MACnC;IACJ;EAAC;IAAAL,GAAA;IAAAC,KAAA,EACD,SAAAiC,OAAO/B,QAAQ,EAAEgC,KAAK,EAAE;MACpB,IAAI,CAAC,IAAI,CAAChB,SAAS,CAAChB,QAAQ,CAAC,EAAE;QAC3B;MACJ;MACAR,UAAU,CAACQ,QAAQ,EAAEgC,KAAK,CAAC;IAC/B;EAAC;EAAA,OAAAtC,WAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}