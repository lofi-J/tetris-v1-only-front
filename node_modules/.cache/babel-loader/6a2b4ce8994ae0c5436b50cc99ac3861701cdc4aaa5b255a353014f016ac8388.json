{"ast":null,"code":"var _jsxFileName = \"/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/src/components/Particle.js\",\n  _s = $RefreshSig$();\nimport \"../css/Particle.css\";\nimport { useCallback } from 'react';\nimport Particles from 'react-tsparticles';\nimport { loadFull } from \"tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Particle = () => {\n  _s();\n  const particlesInit = useCallback(async engine => {\n    await loadFull(engine);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    canvasClassName: \"canvas\",\n    init: particlesInit,\n    options: {\n      fpsLimit: 60,\n      interactivity: {\n        events: {\n          onClick: {\n            enable: true,\n            mode: \"push\"\n          }\n        },\n        modes: {\n          push: {\n            quantity: 4\n          },\n          repulse: {\n            distance: 200,\n            duration: 0.4\n          }\n        }\n      },\n      particles: {\n        color: {\n          value: \"#000\"\n        },\n        links: {\n          enable: false\n        },\n        collisions: {\n          enable: true\n        },\n        move: {\n          direction: \"none\",\n          enable: true,\n          outModes: {\n            default: \"none\"\n          },\n          random: false,\n          speed: 3,\n          straight: true\n        },\n        number: {\n          density: {\n            enable: true,\n            area: 800\n          },\n          value: 80,\n          max: 100\n        },\n        opacity: {\n          value: 1\n        },\n        shape: {\n          type: \"circle\"\n        },\n        size: {\n          value: {\n            min: 1,\n            max: 5\n          }\n        }\n      },\n      emitters: {\n        autoPlay: true,\n        direction: \"center\",\n        rate: {\n          quantity: 10,\n          delay: 2\n        },\n        size: {\n          value: 1\n        },\n        life: {\n          duration: 0.5\n        }\n      },\n      detectRetina: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(Particle, \"cmdqFBMeZZYPpK6hY2WnPPSxZAw=\");\n_c = Particle;\nexport default Particle;\nvar _c;\n$RefreshReg$(_c, \"Particle\");","map":{"version":3,"names":["useCallback","Particles","loadFull","jsxDEV","_jsxDEV","Particle","_s","particlesInit","engine","canvasClassName","init","options","fpsLimit","interactivity","events","onClick","enable","mode","modes","push","quantity","repulse","distance","duration","particles","color","value","links","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","max","opacity","shape","type","size","min","emitters","autoPlay","rate","delay","life","detectRetina","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Pajamas/portfolios/tetris/tetris-v1/tetris/src/components/Particle.js"],"sourcesContent":["import \"../css/Particle.css\"\n\nimport { useCallback } from 'react';\n\nimport Particles from 'react-tsparticles';\nimport { loadFull } from \"tsparticles\";\n\n\nconst Particle = () => {\n    const particlesInit = useCallback(async engine => {\n        await loadFull(engine);\n    }, []);\n\n    return (\n        <Particles\n            canvasClassName=\"canvas\"\n            init={particlesInit}\n            options={{\n                fpsLimit: 60,\n                interactivity: {\n                    events: {\n                        onClick: {\n                            enable: true,\n                            mode: \"push\",\n                        },\n                    },\n                    modes: {\n                        push: {\n                            quantity: 4,\n                        },\n                        repulse: {\n                            distance: 200,\n                            duration: 0.4,\n                        },\n                    },\n                },\n                particles: {\n                    color: {\n                        value: \"#000\",\n                    },\n                    links: {\n                        enable: false,\n                    },\n                    collisions: {\n                        enable: true,\n                    },\n                    move: {\n                        direction: \"none\",\n                        enable: true,\n                        outModes: {\n                            default: \"none\",\n                        },\n                        random: false,\n                        speed: 3,\n                        straight: true,\n                    },\n                    number: {\n                        density: {\n                            enable: true,\n                            area: 800,\n                        },\n                        value: 80,\n                        max: 100,\n                    },\n                    opacity: {\n                        value: 1,\n                    },\n                    shape: {\n                        type: \"circle\",\n                    },\n                    size: {\n                        value: { min: 1, max: 5 },\n                    },\n                },\n                emitters: {\n                    autoPlay: true,\n                    direction: \"center\",\n                    rate: {\n                        quantity: 10,\n                        delay: 2,\n                    },\n                    size: {\n                        value: 1,\n                    },\n                    life: {\n                        duration: 0.5,\n                    },\n                },\n                detectRetina: true,\n            }}\n        />\n    );\n}\n\nexport default Particle;"],"mappings":";;AAAA,OAAO,qBAAqB;AAE5B,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,aAAa,GAAGP,WAAW,CAAC,MAAMQ,MAAM,IAAI;IAC9C,MAAMN,QAAQ,CAACM,MAAM,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIJ,OAAA,CAACH,SAAS;IACNQ,eAAe,EAAC,QAAQ;IACxBC,IAAI,EAAEH,aAAc;IACpBI,OAAO,EAAE;MACLC,QAAQ,EAAE,EAAE;MACZC,aAAa,EAAE;QACXC,MAAM,EAAE;UACJC,OAAO,EAAE;YACLC,MAAM,EAAE,IAAI;YACZC,IAAI,EAAE;UACV;QACJ,CAAC;QACDC,KAAK,EAAE;UACHC,IAAI,EAAE;YACFC,QAAQ,EAAE;UACd,CAAC;UACDC,OAAO,EAAE;YACLC,QAAQ,EAAE,GAAG;YACbC,QAAQ,EAAE;UACd;QACJ;MACJ,CAAC;MACDC,SAAS,EAAE;QACPC,KAAK,EAAE;UACHC,KAAK,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACHX,MAAM,EAAE;QACZ,CAAC;QACDY,UAAU,EAAE;UACRZ,MAAM,EAAE;QACZ,CAAC;QACDa,IAAI,EAAE;UACFC,SAAS,EAAE,MAAM;UACjBd,MAAM,EAAE,IAAI;UACZe,QAAQ,EAAE;YACNC,OAAO,EAAE;UACb,CAAC;UACDC,MAAM,EAAE,KAAK;UACbC,KAAK,EAAE,CAAC;UACRC,QAAQ,EAAE;QACd,CAAC;QACDC,MAAM,EAAE;UACJC,OAAO,EAAE;YACLrB,MAAM,EAAE,IAAI;YACZsB,IAAI,EAAE;UACV,CAAC;UACDZ,KAAK,EAAE,EAAE;UACTa,GAAG,EAAE;QACT,CAAC;QACDC,OAAO,EAAE;UACLd,KAAK,EAAE;QACX,CAAC;QACDe,KAAK,EAAE;UACHC,IAAI,EAAE;QACV,CAAC;QACDC,IAAI,EAAE;UACFjB,KAAK,EAAE;YAAEkB,GAAG,EAAE,CAAC;YAAEL,GAAG,EAAE;UAAE;QAC5B;MACJ,CAAC;MACDM,QAAQ,EAAE;QACNC,QAAQ,EAAE,IAAI;QACdhB,SAAS,EAAE,QAAQ;QACnBiB,IAAI,EAAE;UACF3B,QAAQ,EAAE,EAAE;UACZ4B,KAAK,EAAE;QACX,CAAC;QACDL,IAAI,EAAE;UACFjB,KAAK,EAAE;QACX,CAAC;QACDuB,IAAI,EAAE;UACF1B,QAAQ,EAAE;QACd;MACJ,CAAC;MACD2B,YAAY,EAAE;IAClB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAhD,EAAA,CApFKD,QAAQ;AAAAkD,EAAA,GAARlD,QAAQ;AAsFd,eAAeA,QAAQ;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}